#import "WPSViewController.h"
#import "SFHFKeychainUtils.h"

@interface WPSViewController ()

@property (nonatomic, copy) NSString *oauth2Token;
@property (nonatomic, strong) NSNumber *siteID;
@property (nonatomic, strong) NSTimeZone *timeZone;
@property (nonatomic, weak) UIViewController *statsViewController;

@end


@implementation WPSViewController

NSString *const WPStatsTodayWidgetOAuth2TokenKeychainUsername = @"OAuth2Token";
NSString *const WPStatsTodayWidgetOAuth2TokenKeychainServiceName = @"TodayWidget";
NSString *const WPStatsTodayWidgetUserDefaultsSiteIdKey = @"WordPressTodayWidgetSiteId";
NSString *const WPStatsTodayWidgetUserDefaultsSiteNameKey = @"WordPressTodayWidgetSiteName";
NSString *const WPStatsTodayWidgetUserDefaultsSiteTimeZoneKey = @"WordPressTodayWidgetTimeZone";
NSString *const WPAppGroupName = @"group.org.wordpress.internal";
NSString *const WPStatsTodayWidgetOAuth2TokenKeychainAccessGroup = @"99KV9Z6BKV.org.wordpress.internal";

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    NSNotificationCenter *nc = [NSNotificationCenter defaultCenter];
    [nc addObserver:self selector:@selector(applicationDidBecomeActive:) name:UIApplicationDidBecomeActiveNotification object:nil];
}

- (void)applicationDidBecomeActive:(NSNotification *)notification
{
    [self checkAuthentication];
}

- (void)checkAuthentication
{
    // First check to see if the Internal Beta entitlements pick up any auth tokens and site IDs
    NSUserDefaults *sharedDefaults = [[NSUserDefaults alloc] initWithSuiteName:WPAppGroupName];
    NSNumber *siteId = [sharedDefaults objectForKey:WPStatsTodayWidgetUserDefaultsSiteIdKey];
    NSString *timeZoneName = [sharedDefaults stringForKey:WPStatsTodayWidgetUserDefaultsSiteTimeZoneKey];
    NSError *error = nil;
    NSString *oauth2Token = [SFHFKeychainUtils getPasswordForUsername:WPStatsTodayWidgetOAuth2TokenKeychainUsername
                                                       andServiceName:WPStatsTodayWidgetOAuth2TokenKeychainServiceName
                                                          accessGroup:WPStatsTodayWidgetOAuth2TokenKeychainAccessGroup
                                                                error:&error];
    
    NSTimeZone *timeZone = nil;
    
    if (!siteId || error || timeZoneName.length == 0) {
        NSLog(@"Unable to retrieve auth from WordPress Internal Today Widget.  Using defaults.");
        
#warning You have to replace the site ID, timezone & OAuth2 token with one generated by the WP.com API
        oauth2Token = nil;
        siteId = nil;
        timeZone = nil;
        
        // astralbodi.es
        oauth2Token = @")HAI(ctpA)Ae%tjL#AKATI7FDk@&&lhDkVd3ci*)CQO9403FvysPVIbC44DD9z8U";
        siteId = @66592863;
        timeZone = [NSTimeZone timeZoneForSecondsFromGMT:60*60];
        
        // ardwptest1.wordpress.com
//        oauth2Token = @"(kLfeWAAOMRWEV8Gc3ds)SVS8*l8g6AMBTU3SiNU5l@LLyBzPMAUeN&Q8L(Mjy17";
//        siteId = @57773116;
//        timeZone = [NSTimeZone timeZoneForSecondsFromGMT:0];
    } else {
        timeZone = [NSTimeZone timeZoneWithName:timeZoneName];
    }
    
    // If auth, siteID or timezone changed, reload the stats UI
    if (![oauth2Token isEqualToString:self.oauth2Token] || ![siteId isEqualToNumber:self.siteID] || ![timeZone isEqualToTimeZone:self.timeZone]) {
        self.oauth2Token = oauth2Token;
        self.siteID = siteId;
        self.timeZone = timeZone;
        
        if (self.oauth2Token.length > 0 && !!self.siteID && !!self.timeZone) {
            [self createStatsControllerAndAddSubview];
        }
    }
}

- (void)createStatsControllerAndAddSubview
{
    if (self.statsViewController) {
        [self.statsViewController.view removeFromSuperview];
        [self.statsViewController willMoveToParentViewController:nil];
        [self.statsViewController removeFromParentViewController];
    }

    NSBundle *statsBundle = [NSBundle bundleForClass:[WPStatsViewController class]];
    NSString *path = [statsBundle pathForResource:@"WordPressCom-Stats-iOS" ofType:@"bundle"];
    NSBundle *bundle = [NSBundle bundleWithPath:path];

    UINavigationController *navController = [[UIStoryboard storyboardWithName:@"SiteStats" bundle:bundle] instantiateInitialViewController];
    WPStatsViewController *statsViewController = (WPStatsViewController *)navController.viewControllers.firstObject;
    statsViewController.siteID = self.siteID;
    statsViewController.siteTimeZone = self.timeZone;
    statsViewController.oauth2Token = self.oauth2Token;
    statsViewController.statsDelegate = self;
    
    [self addChildViewController:navController];
    [self.view addSubview:[navController view]];
    [navController didMoveToParentViewController:self];
    
    self.statsViewController = statsViewController;
}

#pragma mark - WPStatsViewControllerDelegate methods

- (void)statsViewController:(WPStatsViewController *)controller openURL:(NSURL *)url
{
    NSLog(@"Opening URL from StatsDemo WPSViewController: %@", url);
    [[UIApplication sharedApplication] openURL:url];
}


@end
